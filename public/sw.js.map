{"version":3,"file":"sw.js","mappings":"MAAA,MAAMA,EAAoB,eACpBC,EAAqB,eACrBC,EAAa,CACf,cACA,QACA,eACA,SACA,UACA,SACA,WACA,WACA,KAGJC,KAAKC,iBAAiB,WAAWC,MAAOC,IACpCC,QAAQC,IAAIF,EAAO,WACnB,MAAMG,QAAcC,OAAOC,KAAKX,SAC1BS,EAAMG,OAAOV,EAAU,IAEjCC,KAAKC,iBAAiB,YAAYC,MAAOC,IACrCC,QAAQC,IAAIF,EAAO,YACnB,MAAMO,QAAmBH,OAAOI,aAC1BC,QAAQC,IACVH,EAAWI,QAAOC,GAAQA,IAASlB,IAClCmB,KAAID,GAAQR,OAAOU,OAAOF,KAC/B,IAEJf,KAAKC,iBAAiB,SAASE,IAC3BC,QAAQC,IAAI,SAAUF,EAAMe,QAAQC,KACpC,MAAM,QAACD,GAAWf,EACN,IAAIiB,IAAIF,EAAQC,KACxBE,SAAWC,SAASD,OACpBlB,EAAMoB,YAIdrB,eAA0BgB,GAEtB,aADqBX,OAAOiB,MAAMN,IACjBO,MAAMP,EAC3B,CAP0BQ,CAAWR,IAC3Bf,EAAMoB,YAQhBrB,eAA4BgB,GACxB,MAAMZ,QAAcC,OAAOC,KAAKV,GAChC,IACI,MAAM6B,QAAiBF,MAAMP,GAG7B,aAFMZ,EAAMsB,IAAIV,EAASS,EAASE,SAASC,OAAM,SAE1CH,CAOX,CANE,MAAOI,GACL,MAAMC,QAAe1B,EAAMkB,MAAMN,GACjC,GAAIc,EACA,OAAOA,EAEX,MAAMD,CACV,CACJ,CAtB4BE,CAAaf,GAAQ,G","sources":["webpack://flappy-bird/./src/sw.js"],"sourcesContent":["const STATIC_CACHE_NAME = 's-cfp-app-v2';\nconst DYNAMIC_CACHE_NAME = 'd-cfp-app-v2';\nconst CACHE_URLS = [\n    '/index.html',\n    '/game',\n    '/leaderboard',\n    '/login',\n    '/signup',\n    '/forum',\n    '/profile',\n    '/welcome',\n    '/'\n    ];\n\nself.addEventListener('install', async (event) => {\n    console.log(event, 'install');\n    const cache = await caches.open(STATIC_CACHE_NAME)\n    await cache.addAll(CACHE_URLS)\n});\nself.addEventListener('activate', async (event) => {\n    console.log(event, 'activate');\n    const cacheNames = await caches.keys();\n    await Promise.all(\n        cacheNames.filter(name => name !== STATIC_CACHE_NAME)\n        .map(name => caches.delete(name))\n    )\n});\nself.addEventListener('fetch', event => {\n    console.log('fetch1', event.request.url);\n    const {request} = event;\n    const url = new URL(request.url)\n    url.origin === location.origin ?\n        event.respondWith(cacheFirst(request))\n        : event.respondWith(networkFirst(request))\n})\n\nasync function cacheFirst(request) {\n    const cashed = await caches.match(request);\n    return cashed ?? fetch(request);\n};\n\nasync function networkFirst(request) {\n    const cache = await caches.open(DYNAMIC_CACHE_NAME);\n    try {\n        const response = await fetch(request);\n        await cache.put(request, response.clone()).catch(() => {\n        });\n        return response;\n    } catch (e) {\n        const cached = await cache.match(request)\n        if (cached) {\n            return cached\n        }\n        throw e;\n    }\n};"],"names":["STATIC_CACHE_NAME","DYNAMIC_CACHE_NAME","CACHE_URLS","self","addEventListener","async","event","console","log","cache","caches","open","addAll","cacheNames","keys","Promise","all","filter","name","map","delete","request","url","URL","origin","location","respondWith","match","fetch","cacheFirst","response","put","clone","catch","e","cached","networkFirst"],"sourceRoot":""}